name: "Validate Helm Chart" 
description: "Runs basic helm validation: lint, template render" 
inputs: 
  template_path: 
    description: 'path to template' 
    required: true 
  report_full_template: 
    description: 'Indicated if the full template should be posted to github comment. Consider switchit it off for massive charts' 
    default: true 
    required: false 
  lint_args: 
    description: 'Adds additional arguments to "helm lint" command' 
    required: false 
  template_args: 
    description: 'Adds additional arguments to "helm template" command' 
    required: false 
runs: 
  using: "composite" 
  steps: 
    - name: Lint 
      id: lint 
      run: | 
        helm lint ${{ inputs.template_path }} --with-subcharts --strict  ${{ inputs.lint_args }} 2>&1 | tee lint.result 
        result_code=${PIPESTATUS[0]} 
        # using the :::set-output command will cut the string to just the first line of content, so we need to do string substitution 
        content=$(cat lint.result) 
        content="${content//'%'/'%25'}" 
        content="${content//$'\n'/'%0A'}" 
        content="${content//$'\r'/'%0D'}" 
        echo "::set-output name=lint_result::$content" 
        exit $result_code 
      shell: bash {0} 
 
    - name: Report Lint failure 
      uses: actions/github-script@v6 
      if: ${{ failure() }} 
      with: 
        script: | 
          const output = `#### ❗️ Helm lint failed ❗️ 
          \`\`\` 
          \$ helm lint ${{ inputs.template_path }} --with-subcharts --strict  ${{ inputs.lint_args }} 
          ${{ steps.lint.outputs.lint_result }} 
          \`\`\` 
          `; 
          github.rest.issues.createComment({ 
            issue_number: context.issue.number, 
            owner: context.repo.owner, 
            repo: context.repo.repo, 
            body: output 
          }) 
    - name: Render template 
      id: template 
      run: | 
        helm template testing ${{ inputs.template_path }} ${{ inputs.template_args }} 2>&1 | tee content.yaml 
        result_code=${PIPESTATUS[0]} 
        # using the :::set-output command will cut the string to just the first line of content, so we need to do string substitution 
        content=$(cat content.yaml) 
        content="${content//'%'/'%25'}" 
        content="${content//$'\n'/'%0A'}" 
        content="${content//$'\r'/'%0D'}" 
        echo "::set-output name=content::$content" 
        echo "${{ github }}" 
        exit $result_code 
      shell: bash {0} 
 
    - name: Report Template result 
      uses: actions/github-script@v6 
      with: 
        script: |
          const fs = require('fs');
          const content = fs.readFileSync('content.yaml', 'utf8');
          const prNumber = context.payload.pull_request.number;
          
          github.issues.createComment (
              owner: context.repo.owner, 
              repo: context.repo.repo,
              issue_numer: prNumber,
              body: 'Rendered Helm chart:\n```yaml\n' + content + '\n```'
            });

